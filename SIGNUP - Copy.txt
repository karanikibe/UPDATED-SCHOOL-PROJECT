from tkinter import *
from tkinter import messagebox
from PIL import ImageTk
import pymysql

def clear(): #CLEARS THE DATA AFTER A USER HAS SIGNED UP OR LOGGED IN
    emailEntry.delete(0,END)
    usernameEntry.delete(0,END)
    passwordEntry.delete(0,END)
    confirm_passwordEntry.delete(0,END)


def connect_database(): #CONNECTS TO THE DATABASE
    if emailEntry.get=='' or usernameEntry.get()=='' or passwordEntry.get()=='' or confirm_passwordEntry.get()=='':
        messagebox.showerror('Error','All Fields are required')

    elif passwordEntry.get() != confirm_passwordEntry.get():
        messagebox.showerror('Error','Passwords Do Not Match')

    else:
        try:
            con=pymysql.connect(host='localhost',user='Kibe',password='8594') #CON IS THE CARIABLE USED TO STORE THE DATA
            mycursor=con.cursor()
        except:
            messagebox.showerror('Error','Database Connectivity Issue')
            return
        try:
           query='create database usersdata' #CREATES THE DATABASE
           mycursor.execute(query)

           query='use usersdata' #CREATES THE TABLES TO FILL IN THE DATA
           mycursor.execute(query)
           query='create table data(id int auto_increment primary key not null, email varchar(50),username varchar(100),password varchar(20))' #GIVES THE SPECIFIC INSTRUCTIONS TO THE DATABSE ON THE DTAA TO BE FILLED IN
           mycursor.execute(query)

        except:
            mycursor.execute('use usersdata')
        query='select * from data where username=%s'
        mycursor.execute(query,(usernameEntry.get()))

        row=mycursor.fetchone()
        if row != None:
            messagebox.showerror('Error','User already exists')

        else:
            query='insert into data(email,username,password) values(%s,%s,%s)' #ALLOWS THE USER REGISTRATON DATA TO BE FILLED IN
            mycursor.execute(query,(emailEntry.get(),usernameEntry.get(),passwordEntry.get())) #FETCHES THE INPUT FROM THE USER AND TAKES IT TO THE DATABASE
            con.commit()
            con.close()
            messagebox.showinfo('Success','Registration is successful')
            clear()
            signup_window.destroy()
            import signin #LINKS THE SIGN UP AND LOG IN PAGE


def login_page():
    signup_window.destroy()
    import signin


signup_window=Tk()
signup_window.geometry('1000x800+0+0')
signup_window.title('Sign Up')
signup_window.resizable(False,False)



heading = Label(signup_window,text='CREATE NEW ACCOUNT',font=('Arial',20,'bold'),bg='white')
heading.place(x=400,y=50)

emailLabel= Label(signup_window,text='Email',font=('Arial',12),bg='white',fg='black')
emailLabel.place(x=400,y=100)

emailEntry= Entry(signup_window,width=20,font=('Times New Roman',12))
emailEntry.place(x=400,y=150)

usernameLabel= Label(signup_window,text='UserName',font=('Arial',12),bg='white',fg='black')
usernameLabel.place(x=400,y=200)

usernameEntry= Entry(signup_window,width=20,font=('Times New Roman',12))
usernameEntry.place(x=400,y=250)

passwordLabel= Label(signup_window,text='Password',font=('Arial',12),bg='white',fg='black')
passwordLabel.place(x=400,y=300)

passwordEntry= Entry(signup_window,width=20,font=('Times New Roman',12))
passwordEntry.place(x=400,y=350)

confirm_passwordLabel = Label(signup_window,text='Confirm Password',font=('Arial',12),bg='white',fg='black')
confirm_passwordLabel.place(x=400,y=400)

confirm_passwordEntry= Entry(signup_window,width=20,font=('Times New Roman',12))
confirm_passwordEntry.place(x=400,y=450)

signupButton=Button(signup_window,text='SIGN UP',font=('Heveltica',18,'bold'),fg='white',bg='black',cursor='hand2',bd=0,width=30,command=connect_database)
signupButton.place(x=400,y=500)

loginLabel = Label(signup_window,text='Already have an account?',font=('heveltica',10),fg='green',bg='white')
loginLabel.place(x=400,y=600)

alreadyaccountButton=Button(signup_window,text='Log in HERE',font=('Heveltica',10,'bold'),fg='green',bg='white',cursor='hand2',bd=0,command=login_page)
alreadyaccountButton.place(x=560,y=600)

signup_window.mainloop()